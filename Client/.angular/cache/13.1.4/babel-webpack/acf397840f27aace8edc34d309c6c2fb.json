{"ast":null,"code":"'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this; // if we have detected an error in the meanwhile\n    // reject straight away\n\n\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this; // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n\n\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","map":{"version":3,"sources":["/Users/nani/Desktop/EHR-2.0/Client/node_modules/readable-stream/lib/internal/streams/async_iterator.js"],"names":["_Object$setPrototypeO","_defineProperty","obj","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","finished","require","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","done","readAndResolve","iter","resolve","data","read","onReadable","process","nextTick","wrapForNext","lastPromise","reject","then","AsyncIteratorPrototype","getPrototypeOf","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","stream","next","_this","error","Promise","destroyed","promise","asyncIterator","_return","_this2","destroy","err","createReadableStreamAsyncIterator","_Object$create","iterator","create","_readableState","endEmitted","code","on","bind","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;"]},"metadata":{},"sourceType":"script"}